---
# This playbook should be run against a cluster when a node is rebuilt.
# It will re-authenticate the node to the cluster and add it back in.

- name: Gather Facts
  hosts: cluster_nodes
  tasks: []

- name: Distribute SSH Keys
  hosts: cluster_nodes
  tasks:
  - name: Clear out cached SSH host keys
    file: path=/root/.ssh/known_hosts state=absent
  
  - include: tasks/distribute_ssh_keys.yml

- hosts: cluster_nodes
  serial: 1
  pre_tasks:
  # Register to Satellite
  - include: tasks/register_to_satellite.yml

  # Install some packages
  - name: Install pre-requisites
    yum: name={{ item }} state=present
    with_items:
    - libsemanage-python
    - nfs-utils
  
  # Add the NFS mount point for our guests
  - name: Add NFS mount point
    mount:
      name: /mnt
      src: "{{ nfs_volume }}"
      fstype: nfs
      opts: defaults
      state: mounted
  
  # Set the SELinux boolean we need for accessing NFS storage
  - name: Set virt_use_nfs boolean
    seboolean: name=virt_use_nfs persistent=yes state=yes
  
  roles:
  - cluster_node
  - virtualization_host
  
  post_tasks:
  - name: Authenticate Cluster
    command: >
      pcs cluster auth -u hacluster -p {{ cluster_password }}
      {% for host in groups['cluster_nodes'] %}
      {{ hostvars[host]['ansible_hostname'] }}
      {% endfor %}
      creates=/var/lib/pcsd/tokens 
 
  - name: Create Cluster
    command: >
      pcs cluster setup --name store
      {% for host in groups['cluster_nodes'] %}
      {{ hostvars[host]['ansible_hostname'] }}
      {% endfor %}
      creates=/etc/corosync/corosync.conf
  
  - name: Start Cluster Services
    command: pcs cluster start
  
  - name: Enable Cluster Services
    command: pcs cluster enable

